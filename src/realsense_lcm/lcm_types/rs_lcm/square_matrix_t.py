"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class square_matrix_t(object):
    __slots__ = ["n", "n_entries", "entries"]

    __typenames__ = ["int32_t", "int32_t", "float"]

    __dimensions__ = [None, None, ["n_entries"]]

    def __init__(self):
        self.n = 0
        self.n_entries = 0
        self.entries = []

    def encode(self):
        buf = BytesIO()
        buf.write(square_matrix_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">ii", self.n, self.n_entries))
        buf.write(struct.pack('>%df' % self.n_entries, *self.entries[:self.n_entries]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != square_matrix_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return square_matrix_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = square_matrix_t()
        self.n, self.n_entries = struct.unpack(">ii", buf.read(8))
        self.entries = struct.unpack('>%df' % self.n_entries, buf.read(self.n_entries * 4))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if square_matrix_t in parents: return 0
        tmphash = (0x4e7ff6e9116fd940) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if square_matrix_t._packed_fingerprint is None:
            square_matrix_t._packed_fingerprint = struct.pack(">Q", square_matrix_t._get_hash_recursive([]))
        return square_matrix_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

